% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/votes.tsne.R
\name{votes.tsne}
\alias{votes.tsne}
\title{Votes t-sne}
\usage{
votes.tsne(x, method = "none", perplex.factor = 0.15, max_iter = 1000)
}
\arguments{
\item{x}{A randomForest object}

\item{method}{One of the transformations offered by decostand from package vegan. Default is 'none'}

\item{perplex.factor}{Multiply the number of observations by the perplex.factor to get the perpelexity value passed to t-sne}

\item{max_iter}{Maximum number of iterations: parameter passed to t-sne}
}
\description{
Calculate t-distributed stochastic neighbor embedding on randomForest votes.
}
\details{
VotesPlot will use the votes matrix of a randomForest object to calculate the probabiliy that
two observations belong to the same cluster using t-distributed stochastic neighbor embedding from package tsne.
An t-sne ordination graph is plotted to trace the results after every 100 iterations until max_iter is reached. 
Main control parameter of t-sne analysis is the perplexity value. Here we use a default perplexity
of 15% of the number of observations. The default perplex.factor = 0.15 is used to calculate perplexity.
Contrasting plot symbols and colors are assigned automatically, but can be adjusted manually.
Although not recommended here, it might be interesting to transform the votes table prior to t-sne.
The argument method can be used to pass the method to decostand. Hellinger transformation might be meaningful. 
Consider to increase max_iter if there is no stabilization of the error after the default 1000 iterations.

returns an object of type votes_tsne 
A plot method is available
}
\examples{
data(iris)
rf <- randomForest(Species ~.,data = iris)
vt <- votes.tsne(rf)
plot(vt)

}
\seealso{
\code{\link{plot.votes_tsne}}
}
\author{
Pedro Martinez Arbizu
}
